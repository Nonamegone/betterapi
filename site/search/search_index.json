{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Links Legendware.pw How to use? Download to this directory %appdata%/Legendware/scripts or to Steam/steamapps/common/Counter-Strike Global Offensive/lua and run this code in your script: require ( 'betterapi' ) print ( misc . scriptname ()) Download Source","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#links","text":"Legendware.pw","title":"Links"},{"location":"#how-to-use","text":"Download to this directory %appdata%/Legendware/scripts or to Steam/steamapps/common/Counter-Strike Global Offensive/lua and run this code in your script: require ( 'betterapi' ) print ( misc . scriptname ()) Download Source","title":"How to use?"},{"location":"draw/","text":"draw.gradientrect(x, y, w, h, color, color2, horizontal) Variable Type Description x Number X coordinate to draw y Number Y coordinate to draw w Number Width to draw h Number Height to draw color color Start Color color2 color End Color horizontal Boolean Horizontal or not Example: client . add_callback ( 'on_paint' , function () draw . gradientrect ( 100 , 100 , 150 , 20 , color . new ( 255 , 255 , 255 ), color . new ( 0 , 0 , 0 ), true ) end )","title":"Draw"},{"location":"draw/#drawgradientrectx-y-w-h-color-color2-horizontal","text":"Variable Type Description x Number X coordinate to draw y Number Y coordinate to draw w Number Width to draw h Number Height to draw color color Start Color color2 color End Color horizontal Boolean Horizontal or not Example: client . add_callback ( 'on_paint' , function () draw . gradientrect ( 100 , 100 , 150 , 20 , color . new ( 255 , 255 , 255 ), color . new ( 0 , 0 , 0 ), true ) end )","title":"draw.gradientrect(x, y, w, h, color, color2, horizontal)"},{"location":"entlist/","text":"entlist.get_players(num) Variable Type Description num Number Type Return Value Table of players num = 0 - enemies only num = 1 - teammates only num = 2 - all players Example: local playerstable = entlist . get_players ( num ) for k , v in pairs ( playerstable ) do print ( v : get_health ()) end entlist.find_by_class(class) Variable Type Description class String Name of this class Return Value Entity that have this class name Example: local chicken = entlist . find_by_class ( CChicken ) print ( tostring ( chicken : get_prop_bool ( 'CChicken' , 'm_jumpedThisFrame' ))) -- Maybe:D entlist.get_player_resource() Return Value CCSPlayerResource entity Example: local CCSPlayerResource = entlist . get_player_resource () print ( tostring ( CCSPlayerResource : get_prop_int ( 'CCSPlayerResource' , 'm_iPlayerC4' ))) -- Maybe:D","title":"Entity list"},{"location":"entlist/#entlistget_playersnum","text":"Variable Type Description num Number Type Return Value Table of players num = 0 - enemies only num = 1 - teammates only num = 2 - all players Example: local playerstable = entlist . get_players ( num ) for k , v in pairs ( playerstable ) do print ( v : get_health ()) end","title":"entlist.get_players(num)"},{"location":"entlist/#entlistfind_by_classclass","text":"Variable Type Description class String Name of this class Return Value Entity that have this class name Example: local chicken = entlist . find_by_class ( CChicken ) print ( tostring ( chicken : get_prop_bool ( 'CChicken' , 'm_jumpedThisFrame' ))) -- Maybe:D","title":"entlist.find_by_class(class)"},{"location":"entlist/#entlistget_player_resource","text":"Return Value CCSPlayerResource entity Example: local CCSPlayerResource = entlist . get_player_resource () print ( tostring ( CCSPlayerResource : get_prop_int ( 'CCSPlayerResource' , 'm_iPlayerC4' ))) -- Maybe:D","title":"entlist.get_player_resource()"},{"location":"examples/","text":"Examples with BetterAPI Info --TODO","title":"Example"},{"location":"examples/#examples-with-betterapi","text":"Info --TODO","title":"Examples with BetterAPI"},{"location":"fs/","text":"fs.createdir(path) Variable Type Description path String Path to create directory Example: fs . createdir ( 'C:/BetterAPI' ) fs.download(from, to) Variable Type Description from String Url to read to String Path to write Example: fs . download ( 'https://pastebin.com/raw/Q5rDZCPJ' , 'C:/BetterAPI/Gnome.lua' ) fs.addfont(path) Variable Type Description path String Path to font Example: fs . addfont ( 'C:/BetterAPI/gnomefont.ttf' ) fs.scriptpath() Return Value Path to script that launched it Example: local scriptpath = fs . scriptpath ()","title":"File system"},{"location":"fs/#fscreatedirpath","text":"Variable Type Description path String Path to create directory Example: fs . createdir ( 'C:/BetterAPI' )","title":"fs.createdir(path)"},{"location":"fs/#fsdownloadfrom-to","text":"Variable Type Description from String Url to read to String Path to write Example: fs . download ( 'https://pastebin.com/raw/Q5rDZCPJ' , 'C:/BetterAPI/Gnome.lua' )","title":"fs.download(from, to)"},{"location":"fs/#fsaddfontpath","text":"Variable Type Description path String Path to font Example: fs . addfont ( 'C:/BetterAPI/gnomefont.ttf' )","title":"fs.addfont(path)"},{"location":"fs/#fsscriptpath","text":"Return Value Path to script that launched it Example: local scriptpath = fs . scriptpath ()","title":"fs.scriptpath()"},{"location":"input/","text":"input.keystate(code) Variable Type Description code Number Button KeyCode Return Value true or false Tip You can see all keycodes here Example: client . add_callback ( 'on_paint' , function () if input . keystate ( 0x01 ) then print ( 'LMB pressed' ) end end ) input.getcursorpos() Return Value X coordinate Y coordinate Example: client . add_callback ( 'on_paint' , function () local cursorpos = input . getcursorpos () print ( 'X coordinate: ' .. cursorpos . x ) print ( 'Y coordinate: ' .. cursorpos . y ) end )","title":"Input"},{"location":"input/#inputkeystatecode","text":"Variable Type Description code Number Button KeyCode Return Value true or false Tip You can see all keycodes here Example: client . add_callback ( 'on_paint' , function () if input . keystate ( 0x01 ) then print ( 'LMB pressed' ) end end )","title":"input.keystate(code)"},{"location":"input/#inputgetcursorpos","text":"Return Value X coordinate Y coordinate Example: client . add_callback ( 'on_paint' , function () local cursorpos = input . getcursorpos () print ( 'X coordinate: ' .. cursorpos . x ) print ( 'Y coordinate: ' .. cursorpos . y ) end )","title":"input.getcursorpos()"},{"location":"memory/","text":"memory.find_process(name) Variable Type name String Example: memory . find_process ( 'csgo.exe' ) memory.find_module(name) Variable Type Description name String Name of the module Return Value module handle Example: local client_dll = memory . find_module ( 'client.dll' ) memory.readmemory(t, offset, add) Variable Type Description t String C type to return offset handle Handle of the module add int Prop offset Return Value What you asked for in t Example: local offsets = { dwLocalPlayer = 0xDA747C , index = 0x64 , } -- 10.11.2021 local lp = memory . readmemory ( \"void*\" , client_dll , offsets . dwLocalPlayer ) local lp_index = memory . readmemory ( \"int\" , ffi . cast ( \"int\" , lp ), offsets . index ) print ( tostring ( lp_index )) -- Prints local player index memory.writememory(t, offset, add, value) Variable Type Description t String C type to write offset handle Handle of the module add int Prop offset value ??? What you need to write Example: -- TODO","title":"Memory"},{"location":"memory/#memoryfind_processname","text":"Variable Type name String Example: memory . find_process ( 'csgo.exe' )","title":"memory.find_process(name)"},{"location":"memory/#memoryfind_modulename","text":"Variable Type Description name String Name of the module Return Value module handle Example: local client_dll = memory . find_module ( 'client.dll' )","title":"memory.find_module(name)"},{"location":"memory/#memoryreadmemoryt-offset-add","text":"Variable Type Description t String C type to return offset handle Handle of the module add int Prop offset Return Value What you asked for in t Example: local offsets = { dwLocalPlayer = 0xDA747C , index = 0x64 , } -- 10.11.2021 local lp = memory . readmemory ( \"void*\" , client_dll , offsets . dwLocalPlayer ) local lp_index = memory . readmemory ( \"int\" , ffi . cast ( \"int\" , lp ), offsets . index ) print ( tostring ( lp_index )) -- Prints local player index","title":"memory.readmemory(t, offset, add)"},{"location":"memory/#memorywritememoryt-offset-add-value","text":"Variable Type Description t String C type to write offset handle Handle of the module add int Prop offset value ??? What you need to write Example: -- TODO","title":"memory.writememory(t, offset, add, value)"},{"location":"misc/","text":"misc.scriptname() Return Value The name of the script that did this Example: local name = misc . scriptname () print ( 'Wow, your script is called \"' .. name .. '\", good name!' )","title":"Misc"},{"location":"misc/#miscscriptname","text":"Return Value The name of the script that did this Example: local name = misc . scriptname () print ( 'Wow, your script is called \"' .. name .. '\", good name!' )","title":"misc.scriptname()"},{"location":"panorama/","text":"TODO","title":"Panorama"},{"location":"panorama/#todo","text":"","title":"TODO"},{"location":"sengine/","text":"sengine.colorprint(color, text) Variable Type Description color color Color to print text String Text to print Example: sengine . colorprint ( color . new ( 255 , 30 , 20 ), 'Hello world! \\n ' ) sengine.chatprint(text) Variable Type Description text String Text to print Example: sengine . chatprint ( 'Ah shit, here we go again' )","title":"Source engine"},{"location":"sengine/#senginecolorprintcolor-text","text":"Variable Type Description color color Color to print text String Text to print Example: sengine . colorprint ( color . new ( 255 , 30 , 20 ), 'Hello world! \\n ' )","title":"sengine.colorprint(color, text)"},{"location":"sengine/#senginechatprinttext","text":"Variable Type Description text String Text to print Example: sengine . chatprint ( 'Ah shit, here we go again' )","title":"sengine.chatprint(text)"},{"location":"classes/player/","text":"player:is_alive() Return Value bool Is player alive or not Example: local lp = entitylist . get_local_player () print ( tostring ( lp : is_alive ())) player:gethitboxpos(hitbox_id) Variable Type Description hitbox_id Number Id of hitbox you want to know position Return Value vector position Example: client . add_callback ( 'on_paint' , function () local lp = entitylist . get_local_player () local headpos = lp : gethitboxpos ( 0 ) local pos2d = render . world_to_screen ( headpos ) if not pos2d then return end render . draw_rect_filled ( pos2d . x - 7.5 , pos2d . y - 7.5 , 15 , 15 , color . new ( 255 , 100 , 100 ) ) end )","title":"Player"},{"location":"classes/player/#playeris_alive","text":"Return Value bool Is player alive or not Example: local lp = entitylist . get_local_player () print ( tostring ( lp : is_alive ()))","title":"player:is_alive()"},{"location":"classes/player/#playergethitboxposhitbox_id","text":"Variable Type Description hitbox_id Number Id of hitbox you want to know position Return Value vector position Example: client . add_callback ( 'on_paint' , function () local lp = entitylist . get_local_player () local headpos = lp : gethitboxpos ( 0 ) local pos2d = render . world_to_screen ( headpos ) if not pos2d then return end render . draw_rect_filled ( pos2d . x - 7.5 , pos2d . y - 7.5 , 15 , 15 , color . new ( 255 , 100 , 100 ) ) end )","title":"player:gethitboxpos(hitbox_id)"}]}